# You need to *source* this, *not* execute it
# for it to affect your currently running shell!

# https://github.com/noroute/msps

INTERFACE="$1"

function configure_http_proxy {
    ENABLED=$1
    HOST=$2
    PORT=$3
    if [[ "$ENABLED" == "Yes" ]]; then
        export http_proxy="${HOST}":"${PORT}"
        echo "Set http_proxy to ${http_proxy}"
    else
        unset http_proxy
        echo "Unset http_proxy"
    fi
}

function configure_https_proxy {
    ENABLED=$1
    HOST=$2
    PORT=$3
    if [[ "$ENABLED" == "Yes" ]]; then
        export https_proxy="${HOST}":"${PORT}"
        echo "Set https_proxy to ${https_proxy}"
    else
        unset https_proxy
        echo "Unset https_proxy"
    fi
}

function set_bypass_domains {
    INTERFACE=$1
    BYPASS_DOMAINS=$(networksetup -getproxybypassdomains "${INTERFACE}" | tr '\n' ',' | sed 's/.$//')
    export no_proxy="${BYPASS_DOMAINS}"
    echo "Set no_proxy=${no_proxy}"
}

### Main ###

if [[ $# -ne 1 ]]; then
    echo "Usage: $0 <INTERFACE>"
    exit 1
fi

WEB_PROXY_STATE=$(networksetup -getwebproxy "$INTERFACE" | grep '^Enabled: ' | awk '{print $2}')
WEB_PROXY_HOST=$(networksetup -getwebproxy "$INTERFACE" | grep '^Server: ' | awk '{print $2}')
WEB_PROXY_PORT=$(networksetup -getwebproxy "$INTERFACE" | grep '^Port: ' | awk '{print $2}')

SECURE_PROXY_STATE=$(networksetup -getsecurewebproxy "$INTERFACE" | grep '^Enabled: ' | awk '{print $2}')
SECURE_PROXY_HOST=$(networksetup -getsecurewebproxy "$INTERFACE" | grep '^Server: ' | awk '{print $2}')
SECURE_PROXY_PORT=$(networksetup -getsecurewebproxy "$INTERFACE" | grep '^Port: ' | awk '{print $2}')

configure_http_proxy "${WEB_PROXY_STATE}" "${WEB_PROXY_HOST}" "${WEB_PROXY_PORT}"
configure_https_proxy "${SECURE_PROXY_STATE}" "${SECURE_PROXY_HOST}" "${SECURE_PROXY_PORT}"
set_bypass_domains "${INTERFACE}"
